{"version":3,"file":"static/js/102.fd9ef3fb.chunk.js","mappings":"8OAGaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,itBAsCLE,EAAYF,EAAAA,GAAAA,EAAH,meAwBTG,GAAWH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8OAaRI,EAAoBJ,EAAAA,GAAAA,IAAH,gFAMjBK,EAAQL,EAAAA,GAAAA,MAAH,qFAMLM,EAAQN,EAAAA,GAAAA,IAAH,sQAeLO,EAAOP,EAAAA,GAAAA,GAAH,+aAoBJQ,EAAgBR,EAAAA,GAAAA,IAAH,kTAcbS,EAAaT,EAAAA,GAAAA,OAAH,q8B,UC5HjBU,EAASC,EAAAA,KAAaC,MAAM,CAChCC,OAAQF,EAAAA,GACE,6BACPG,IAAI,IAAK,mDACTC,IAAI,IAAK,mDACTC,QAAQ,mCACRC,UAAU,2BACVC,SAAS,4BACZC,IAAKR,EAAAA,GACK,0BACPG,IAAI,GAAI,kDACRC,IAAI,IAAK,mDACTE,UAAU,wBACVC,SAAS,yBACTF,QAAQ,gCACXI,cAAeT,EAAAA,GACL,qCACPG,IAAI,GAAI,kDACRC,IAAI,IAAK,mDACTE,UAAU,mCACVC,SAAS,oCACTF,QAAQ,2CACXK,cAAeV,EAAAA,GACL,qCACPG,IAAI,GAAI,kDACRC,IAAI,IAAK,mDACTE,UAAU,mCACVC,SAAS,oCACTF,QAAQ,2CACXM,UAAWX,EAAAA,KAAaO,aAGbK,EAAa,SAAC,GAAgC,EAA9BC,UAA+B,IAApBC,EAAmB,EAAnBA,cAUtC,OACE,0BACM,SAAC,KAAD,CACIA,cAAeA,GAXL,CAChBZ,OAAQ,GACRM,IAAK,GACLC,cAAe,GACfC,cAAe,GACfC,UAAW,KAOLI,iBAAmBhB,EAFvB,UAGF,UAAC,KAAD,YACE,UAACH,EAAD,YACE,yBACE,8BACE,SAACR,EAAD,CAAO4B,KAAK,SAASC,KAAK,SAASC,YAAY,kBAC/C,SAAC,KAAD,CAAcD,KAAK,SAASE,UAAWxB,UAI3C,yBACE,8BACE,SAACP,EAAD,CAAO4B,KAAK,MAAMC,KAAK,MAAMC,YAAY,WACzC,SAAC,KAAD,CAAcD,KAAK,SAASE,UAAWxB,UAIjC,yBACI,8BACI,SAACP,EAAD,CACI4B,KAAK,gBACLC,KAAK,gBACLC,YAAY,0BAEhB,SAAC,KAAD,CAAcD,KAAK,gBAAgBE,UAAWxB,UAItD,yBACI,8BACI,SAACP,EAAD,CACI4B,KAAK,gBACLC,KAAK,gBACLC,YAAY,0BAEhB,SAAC,KAAD,CAAcD,KAAK,gBAAgBE,UAAWxB,UAItD,2BACI,SAACJ,EAAD,4BACA,UAACE,EAAD,YACI,UAACC,EAAD,YACI,SAACF,EAAD,CAAUwB,KAAK,QAAQC,KAAK,YAAYG,MAAM,MADlD,QAGD,UAAC1B,EAAD,YACK,SAACF,EAAD,CAAUwB,KAAK,QAAQC,KAAK,YAAYG,MAAM,MADnD,QAGC,UAAC1B,EAAD,YACI,SAACF,EAAD,CAAUwB,KAAK,QAAQC,KAAK,YAAYG,MAAM,MADlD,QAGA,UAAC1B,EAAD,YACI,SAACF,EAAD,CAAUwB,KAAK,QAAQC,KAAK,YAAYG,MAAM,MADlD,iBAMZ,SAACvB,EAAD,CAAewB,UAAYP,EAA3B,UACI,SAAChB,EAAD,CAAYkB,KAAK,SAAjB,yCAMrB,E,8BCxHYM,EAAajC,EAAAA,GAAAA,IAAH,wxCAGKkC,EAUAC,EAAgBC,EAUhBD,EAAgBC,EAUhBD,EAAgBC,GAO/BC,EAAwBrC,EAAAA,GAAAA,IAAH,0NAWrBsC,EAAKtC,EAAAA,GAAAA,GAAH,8Z,UCrDFuC,EAAUvC,EAAAA,GAAAA,IAAH,oqBAOQkC,GAoBfM,EAAcxC,EAAAA,GAAAA,IAAH,2QAcXyC,EAAWzC,EAAAA,GAAAA,IAAH,wIAQR0C,EAAQ1C,EAAAA,GAAAA,GAAH,0IAQL2C,EAAO3C,EAAAA,GAAAA,GAAH,qGAMJ4C,EAAO5C,EAAAA,GAAAA,EAAH,qIAQJ6C,EAAU7C,EAAAA,GAAAA,EAAH,qICvEP8C,EAAe,WAExB,OACI,UAACP,EAAD,YACI,UAACC,EAAD,YACI,SAACE,EAAD,2BACA,2BACI,UAACC,EAAD,YACI,SAACC,EAAD,oBAEA,SAACC,EAAD,qBACA,SAACD,EAAD,wBAGJ,UAACD,EAAD,YACI,SAACC,EAAD,wBACA,SAACA,EAAD,wBAEJ,UAACD,EAAD,YACI,SAACC,EAAD,0BACA,SAACA,EAAD,wBAEJ,UAACD,EAAD,YACI,SAACC,EAAD,4BAEA,SAACC,EAAD,kBACA,SAACD,EAAD,2BAKZ,UAACH,EAAD,YACI,SAACC,EAAD,oCAEA,yBACI,SAACE,EAAD,wBAEJ,SAACA,EAAD,oDAIf,ECFD,EAhCuB,WAYnB,OACI,UAACX,EAAD,YACI,SAACI,EAAD,WAII,4BACI,SAACC,EAAD,8DACA,SAACf,EAAD,UAOR,SAACuB,EAAD,MAGX,C","sources":["components/CalculatorForm/CalculatorForm.styled.jsx","components/CalculatorForm/CalculatorForm.jsx","components/CalculatorForm/CalculatorPage.styled.js","components/RightSideBar/RightSideBar.styled.jsx","components/RightSideBar/RightSideBar.jsx","pages/CalculatorPage.jsx"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  border: none;\n  width: 100%;\n  padding-bottom: 8px;\n  margin-bottom: 32px;\n  border-bottom: 1px solid #E0E0E0;\n  font-family: VerdanaBold;\n  line-height: 16px;\n  font-size: 14px;\n  color: #212121;\n  letter-spacing: 0.04em;\n  background-color: transparent;\n\n  &::placeholder {\n    color: #9B9FAA;\n    opacity: 1;\n  }\n  &:focus-visible {\n    outline: none;\n  }\n  &:hover,\n  &:focus {\n    &::placeholder {\n      color: #FC842D;\n    }\n  }\n  @media (min-width: 554px) and (max-width: 1023px) {\n    padding-bottom: 20px;\n    margin-bottom: 0;\n    width: 240px;\n  }\n  @media (min-width: 1024px) {\n    padding-bottom: 20px;\n    margin-bottom: 0;\n    width: 240px;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  margin-bottom: 8px;\n  font-family: VerdanaBold;\n  line-height: 1.2;\n  font-size: 14px;\n  color: #9B9FAA;\n  letter-spacing: 0.04em;\n  &:hover,\n  &:focus {\n    color: #FC842D;\n  }\n\n  @media (min-width: 426px) and (max-width: 1023px) {\n    border-bottom: 1px solid #e0e0e0;\n    padding-bottom: 20px;\n    width: 240px;\n  }\n  @media (min-width: 1024px) {\n    border-bottom: 1px solid #e0e0e0;\n    padding-bottom: 20px;\n    width: 240px;\n  }\n`;\n\nexport const Checkbox = styled(Field)`\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  &:checked {\n    appearance: none;\n    border-radius: 50%;\n    background: #FC842D;\n    border: 5px solid #fff;\n    box-shadow: 0 0 0 1px #9B9FAA;\n  }\n`;\n\nexport const CheckboxContainer = styled.div`\n  display: flex;\n  gap: 24px;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  color: #FC842D;\n`;\n\nexport const Error = styled.div`\n  position: absolute;\n  margin-top: -30px;\n  font-size: 10px;\n  color: white;\n  background-color: red;\n  padding: 5px;\n  border-radius: 5px;\n  width: 75%;\n  @media (min-width: 426px) {\n    margin-top: 0;\n    width: 240px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  padding-right: 40px;\n  @media (min-width: 554px) and (max-width: 1023px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 30px;\n    row-gap: 40px;\n\n    padding-right: 224px;\n  }\n  @media (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 30px;\n    row-gap: 40px;\n    width: 608px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  @media (min-width: 426px) and (max-width: 1023px) {\n    justify-content: flex-start;\n  }\n  @media (min-width: 1024px) {\n    justify-content: flex-start;\n    display: inline-block;\n    position: relative;\n    left: 339px;\n  }\n`;\n\nexport const ButtonForm = styled.button`\n  padding: 13px 25px;\n  border-radius: 30px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  line-height: 1.2;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  display: block;\n  cursor: pointer;\n\n  color: #ffffff;\n  background: #FC842D;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  position: relative;\n  &:hover,\n  :focus {\n    background: #f07116;\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    top: -11px;\n    left: 5px;\n    width: 72px;\n    height: 22px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 50px -15px 0 10px #fff;\n    opacity: 1;\n    transition: opacity 700ms linear;\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    top: -8px;\n    left: 167px;\n    width: 50px;\n    height: 20px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: -35px -10px 0 10px #fff;\n    opacity: 1;\n    transition: opacity 700ms linear;\n  }\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport {\n  ButtonForm,\n  ButtonWrapper,\n  Checkbox,\n  CheckboxContainer,\n  Error,\n  Input,\n  Label,\n  List,\n  Paragraph,\n} from './CalculatorForm.styled';\n\nconst schema = yup.object().shape({\n  height: yup\n    .number('Height is use only number')\n    .min(100, 'Please enter a number more than or equal to 100')\n    .max(250, 'Please enter a number less than or equal to 250')\n    .integer('Height must be a integer number')\n    .typeError('Height must be a number')\n    .required('Height is required field'),\n  age: yup\n    .number('Age is use only number')\n    .min(18, 'Please enter a number more than or equal to 18')\n    .max(100, 'Please enter a number less than or equal to 100')\n    .typeError('Age must be a number')\n    .required('Age is required field')\n    .integer('Age must be a integer number'),\n  currentWeight: yup\n    .number('Current weight is use only number')\n    .min(20, 'Please enter a number more than or equal to 20')\n    .max(500, 'Please enter a number less than or equal to 500')\n    .typeError('Current weight must be a number')\n    .required('Current weight is required field')\n    .integer('Current weight must be a integer number'),\n  desiredWeight: yup\n    .number('Desired weight is use only number')\n    .min(20, 'Please enter a number more than or equal to 20')\n    .max(500, 'Please enter a number less than or equal to 500')\n    .typeError('Desired weight must be a number')\n    .required('Desired weight is required field')\n    .integer('Desired weight must be a integer number'),\n  bloodType: yup.string().required(),\n});\n\nexport const WeightForm = ({ openModal, initialValues}) => {\n\n    const startValues = {\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n    };\n\n  return (\n    <div>\n          <Formik\n              initialValues={initialValues ? initialValues : startValues}\n              validationSchema={ schema} >\n        <Form>\n          <List>\n            <li>\n              <label>\n                <Input type=\"height\" name=\"height\" placeholder=\"Height, cm *\" />\n                <ErrorMessage name=\"height\" component={Error} />\n              </label>\n                      </li>\n                      \n            <li>\n              <label>\n                <Input type=\"age\" name=\"age\" placeholder=\"Age *\" />\n                <ErrorMessage name=\"height\" component={Error} />\n              </label>\n                      </li>\n                      \n                      <li>\n                          <label>\n                              <Input\n                                  type=\"currentWeight\"\n                                  name=\"currentWeight\"\n                                  placeholder=\"Current weight, kg *\"\n                              />\n                              <ErrorMessage name=\"currentWeight\" component={Error} />\n                          </label>\n                      </li>\n\n                      <li>\n                          <label>\n                              <Input\n                                  type=\"desiredWeight\"\n                                  name=\"desiredWeight\"\n                                  placeholder=\"Desired weight, kg *\"\n                              />\n                              <ErrorMessage name=\"desiredWeight\" component={Error} ></ErrorMessage>\n                          </label>\n                      </li>\n\n                      <li>\n                          <Paragraph>Blood type *</Paragraph>\n                          <CheckboxContainer>\n                              <Label>\n                                  <Checkbox type=\"radio\" name=\"bloodType\" value=\"1\" />1\n                              </Label>\n                             <Label>\n                                  <Checkbox type=\"radio\" name=\"bloodType\" value=\"2\" />2\n                              </Label>\n                              <Label>\n                                  <Checkbox type=\"radio\" name=\"bloodType\" value=\"3\" />3\n                              </Label>\n                              <Label>\n                                  <Checkbox type=\"radio\" name=\"bloodType\" value=\"4\" />4\n                              </Label>\n                          </CheckboxContainer>\n                      </li>\n                  </List>\n                  <ButtonWrapper disabled={ !initialValues} >\n                      <ButtonForm type=\"submit\" >Start losing weight</ButtonForm>\n                  </ButtonWrapper>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport leaves from '../../images/diary-page/leaf-desk.png';\nimport leavesTablet from '../../images/hero/tablet/leaves.png';\nimport SideBarBgDesk from '../../images/diary-page/sidebar-bg-desk.png';\n\nexport const WrapperAll = styled.div`\n\n  @media (min-width: 768px) and (max-width: 1023px) {\n    background-image: url(${leavesTablet});\n    background-repeat: no-repeat;\n    background-position: bottom 0px left 0px;\n    background-size: auto;\n  }\n  @media (min-width: 1024px) and (max-width: 1120px) {\n    padding: 300px 16px 55px 16px;\n    display: flex;\n    height: 100vh;\n    justify-content: space-between;\n    background-image: url(${leaves}), url(${SideBarBgDesk});\n    background-repeat: no-repeat, no-repeat;\n    background-size: auto, 50% 100%;\n    background-position: top 0px right 0px, top 0px right -110px;\n  }\n  @media (min-width: 1121px) and (max-width: 1280px) {\n    margin: 0 auto;\n    padding: 300px 16px 55px 16px;\n    display: flex;\n    justify-content: space-between;\n    background-image: url(${leaves}), url(${SideBarBgDesk});\n    background-repeat: no-repeat, no-repeat;\n    background-size: auto, 40% 100%;\n    background-position: top 0px right 0px, top 0px right 0px;\n  }\n  @media (min-width: 1280px) {\n    margin: 0 auto;\n    padding: 300px 16px 55px 16px;\n    display: flex;\n    justify-content: space-between;\n    background-image: url(${leaves}), url(${SideBarBgDesk});\n    background-repeat: no-repeat, no-repeat;\n    background-size: auto, 40% 100%;\n    background-position: top 0px right 0px, top 0px right 0px;\n  }\n`;\n\nexport const CalculatorPageWrapper = styled.div`\n  padding: 32px 20px 100px;\n\n  @media (min-width: 426px) and (max-width: 1023px) {\n    padding: 100px 32px 48px 32px;\n  }\n  @media (min-width: 1024px) {\n    padding: 0px 16px 110px;\n  }\n`;\n\nexport const H2 = styled.h2`\n  line-height: 1.2;\n  font-size: 14px;\n  line-height: 1.4;\n  margin-bottom: 34px;\n  color: #212121;\n  @media (min-width: 426px) and (max-width: 1023px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n    max-width: 635px;\n  }\n  @media (min-width: 1024px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n    max-width: 635px;\n  }\n`;","import styled from 'styled-components';\nimport leavesTablet from '../../images/diary-page/leaf-tablet.png';\n\nexport const Wrapper = styled.div`\n  background-color: #f0f1f3;\n  padding: 40px 20px 84px 20px;\n\n  @media (min-width: 768px) and (max-width: 1023px) {\n    padding: 80px 0px 80px 32px;\n    display: flex;\n    background-image: url(${leavesTablet});\n    background-repeat: no-repeat;\n    background-position: bottom 0px left 385px;\n    background-size: auto;\n  }\n  @media (min-width: 1024px) and (max-width: 1120px) {\n    background-color: transparent;\n    padding: 0px;\n    margin-right: 55px;\n  }\n  @media (min-width: 1121px) and (max-width: 1280px) {\n    margin-right: 105px;\n    padding: 0px;\n  }\n  @media (min-width: 1280px) {\n    margin-right: 105px;\n    padding: 0px;\n  }\n`;\n\nexport const SummaryWrap = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  margin-bottom: 40px;\n  @media (min-width: 768px) and (max-width: 1023px) {\n    width: 288px;\n    margin: 0;\n    margin-right: 80px;\n  }\n  @media (min-width: 1024px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport const FoodWrap = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  @media (min-width: 768px) and (max-width: 1023px) {\n    margin: 0;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\n\nexport const RedText = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #fd0000;\n`;","import { Wrapper, SummaryWrap, FoodWrap, Title, Item, Text, RedText } from \"./RightSideBar.styled\"\n\n\nexport const RightSideBar = () => {\n    \n    return (\n        <Wrapper>\n            <SummaryWrap>\n                <Title>Summary for</Title>\n                <ul>\n                    <Item>\n                        <Text>Left</Text>\n\n                        <RedText> kcal</RedText>\n                        <Text> kcal</Text>\n\n                    </Item>\n                    <Item>\n                        <Text>Consumed</Text>\n                        <Text> kcal</Text>\n                    </Item>\n                    <Item>\n                        <Text>Daily rate</Text>\n                        <Text> kcal</Text>\n                    </Item>\n                    <Item>\n                        <Text>n% of normal</Text>\n\n                        <RedText> %</RedText>\n                        <Text> %</Text>\n\n                    </Item>\n                </ul>\n            </SummaryWrap>\n            <FoodWrap>\n                <Title>Food not recommended</Title>\n\n                <ul>\n                    <Text> xxxx </Text>\n                </ul>\n                <Text>Your diet will be displayed here</Text>\n            </FoodWrap>\n        </Wrapper>\n    )\n};","import React, {\n    // useState,\n    // useContext\n} from \"react\";\n// import { useSelector } from \"react-redux\";\nimport { WeightForm } from \"components/CalculatorForm/CalculatorForm\";\nimport { CalculatorPageWrapper, H2, WrapperAll } from \"components/CalculatorForm/CalculatorPage.styled\";\n// import Modal from \"components/Modal/Modal\";\nimport { RightSideBar } from \"components/RightSideBar/RightSideBar\";\n\nconst CalculatorPage = () => {\n    // const [isModalOpened, setIsModalOpened] = useState(false);\n    // const [userParams, setUserParams] = useState(null);\n\n    // const body = document.querySelector('body');\n\n    // const onModalClose = () => {\n    //     setIsModalOpened(isModalOpened => !isModalOpened);\n    //     body.style.overflow = 'auto';\n    // };\n\n\n    return (\n        <WrapperAll>\n            <CalculatorPageWrapper>\n                {/* {isModalOpened && (\n                    <Modal onclose={onModalClose} />\n                )} */}\n                <div>\n                    <H2>Calculate your daily calories intake right now</H2>\n                    <WeightForm\n                        // initialValues={}\n                        // openModal={setIsModalOpened}\n                        // setUserParams={ setUserParams}\n                    />\n                </div>\n            </CalculatorPageWrapper>\n            <RightSideBar/>\n        </WrapperAll>\n    )\n}\n\nexport default CalculatorPage;"],"names":["Input","styled","Field","Paragraph","Checkbox","CheckboxContainer","Label","Error","List","ButtonWrapper","ButtonForm","schema","yup","shape","height","min","max","integer","typeError","required","age","currentWeight","desiredWeight","bloodType","WeightForm","openModal","initialValues","validationSchema","type","name","placeholder","component","value","disabled","WrapperAll","leavesTablet","leaves","SideBarBgDesk","CalculatorPageWrapper","H2","Wrapper","SummaryWrap","FoodWrap","Title","Item","Text","RedText","RightSideBar"],"sourceRoot":""}